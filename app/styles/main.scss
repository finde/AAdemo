// bower:scss
@import "../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap.scss";
// endbower
@import "_functions";

$width: 600px;
$min-tile-count: 2;
$max-tile-count: 30;
$tile-padding: 5px;
$tile-radius: 3px;
$tile-font: 'Open Sans', sans-serif;
$colors: #EEE4DA,
         #EAE0C8,
         #F59563,
         #3399ff,
         #ffa333,
         #cef030,
         #E8D8CE,
         #990303,
         #6BA5DE,
         #DCAD60,
         #B60022;

$game-container-background: #bbada0;
$tile-color: #eee4da;
$tile-gold-color: #edc22e;
$tile-gold-glow-color: lighten($tile-gold-color, 15%);
$text-color: #776E65;
$bright-text-color: #f9f6f2;

// DON'T EDIT BELOW
$transition-time: 170ms;

.container {
  max-width: 600px;
}

html, body {
  margin:      0;
  padding:     0;

  background:  #faf8ef;
  color:       $text-color;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size:   18px;
}

p {
  margin-top:            0;
  margin-bottom:         10px;
  line-height:           1.65;
  display:               block;
  -webkit-margin-before: 1em;
  -webkit-margin-after:  1em;
  -webkit-margin-start:  0px;
  -webkit-margin-end:    0px;
}

a {
  color:           $text-color;
  font-weight:     bold;
  text-decoration: underline;
  cursor:          pointer;
  &:hover {
    color: darken($text-color, 5%);
  }
}

strong {
  &.important {
    text-transform: uppercase;
  }
}

hr {
  border:        none;
  border-bottom: 1px solid lighten($text-color, 40%);
  margin-top:    20px;
  margin-bottom: 30px;
}

#heading {
  margin-top: 1em;
}

h1.title {
  font-size:   35px;
  font-weight: bold;
  margin:      0;
  display:     block;
  float:       left;
}

.worldSize-container, .predatorLocation-container, .preyLocation-container {
  $inner-height: 25px;

  position:      relative;
  background:    $game-container-background;
  padding:       30px 25px 15px;
  font-size:     $inner-height;
  font-weight:   bold;
  border-radius: 3px;
  color:         white;
  margin-top:    8px;
  text-align:    center;

  &:after {
    position:       absolute;
    width:          100%;
    top:            10px;
    left:           0;
    text-transform: uppercase;
    font-size:      13px;
    line-height:    13px;
    text-align:     center;
    color:          $tile-color;
  }

  .score-addition {
    position:    absolute;
    right:       30px;
    color:       red;
    font-size:   $inner-height;
    line-height: $inner-height;
    font-weight: bold;
    color:       rgba($text-color, .9);
    z-index:     100;
    @include animation(move-up 600ms ease-in);
    @include animation-fill-mode(both);
  }
}

.worldSize-container:after {
  content: "World Size";
}

.predatorLocation-container:after {
  content: "Predator"
}

.preyLocation-container:after {
  content: "Prey"
}

#instructions {
  padding-top: 0.5em;

  .restart-button {
    margin-top: -0.5em; /* hack */
  }
}

.restart-button {
  background:      #8f7a66;
  border-radius:   3px;
  padding:         0 20px;
  text-decoration: none;
  color:           #f9f6f2;
  height:          40px;
  line-height:     42px;
  cursor:          pointer;
  border:          none;

  &:hover, &:focus {
    color: white;
  }
}

.mode-button {
  background:      #8f7a66;
  border-radius:   3px;
  text-decoration: none;
  color:           #f9f6f2;
  height:          40px;
  cursor:          pointer;
  border:          none;
  font-size:       14px;
  width:           100%;
  text-align:      center;

  &:hover, &:focus {
    color:   white;
    opacity: 1;
  }

  &.active {
    opacity: 0.9;
  }

  &.innactive {
    opacity: 0.5;
  }
}

button {
  outline:        none !important;
  outline-offset: none !important;
}

#content {

}

#game-container {
  position: relative;
  width:    $width;
  height:   $width;
  margin:   1em auto;
}

.game-overlay {
  width:            $width;
  height:           $width;
  background-color: rgba(255, 255, 255, 0.47);
  position:         absolute;
  top:              0;
  left:             0;
  z-index:          10;
  text-align:       center;
  padding-top:      35%;
  font-size:        3em;
  font-weight:      bold;
  overflow:         hidden;
  box-sizing:       border-box;

  &.ng-enter {
    @include transition(all 500ms ease-in);
    //    @include transform(translate(0, 100%));
    opacity: 0;
  }

  &.ng-enter-active {
    //    @include transform(translate(0, 0));
    opacity: 1;
  }

  .lower {
    display:    block;
    margin-top: 29px;
    font-size:  16px;

    a {
      display:         inline-block;
      background:      #8f7a66;
      border-radius:   3px;
      padding:         0 20px;
      text-decoration: none;
      color:           #f9f6f2;
      height:          40px;
      line-height:     42px;
      cursor:          pointer;
      margin-left:     9px;
    }
  }
}

@mixin game-board($tile-count: 4) {
  $tile-size: ($width - $tile-padding * ($tile-count + 1)) / $tile-count;
  #game-#{$tile-count} {
    position:           relative;
    padding:            $tile-padding;
    cursor:             default;
    background:         #bbaaa0;
    border-radius:      6px;
    width:              $width;
    height:             $width;
    -webkit-box-sizing: border-box;
    -moz-box-sizing:    border-box;
    box-sizing:         border-box;

    .grid-container {
      position: absolute;
      z-index:  1;
      margin:   0 auto;

      .grid-cell {
        width:         $tile-size;
        height:        $tile-size;
        margin-bottom: $tile-padding;
        margin-right:  $tile-padding;
        float:         left;
        @include border-radius($tile-radius);
        background:    rgba(238, 228, 218, 0.35);
        &:last-child {
          margin-right: 0
        }

        $arrow-size: 18px;
        $centering-padding: floor($tile-size - $arrow-size)/ 2;

        position:      relative;

        .arrow {
          position: absolute;
          opacity:  0.05;

          &.dir-up {
            top:  0;
            left: $centering-padding - 1;
          }

          &.dir-down {
            bottom: 0;
            left:   $centering-padding + 1;
            top:    auto;
          }

          &.dir-left {
            top:  $centering-padding;
            left: 0%;
          }

          &.dir-right {
            top:   $centering-padding;
            right: 0;
          }

          &.active {
            opacity: 1;
          }
        }

      }
    }

    .tile-container {
      position: absolute;
      z-index:  2;

      .unstyled-tile {
        //        font-family: $tile-font;
        position:    absolute;
        width:       $tile-size;
        height:      $tile-size;
        background:  white;
        margin:      0 auto;
        //        font-size:   2em;
        text-align:  center;
        font-weight: bold;
        z-index:     10;
        //        font-size:   2.5em;
        line-height: ($width/$tile-count) - $tile-padding;
      }
      .tile {
        font-family:                 $tile-font;
        position:                    absolute;
        width:                       $tile-size;
        height:                      $tile-size;
        @include border-radius($tile-radius);
        @include transition($transition-time ease-in-out);
        // @include transition-property(transform);
        -webkit-transition-property: -webkit-transform;
        -moz-transition-property:    -moz-transform;
        transition-property:         transform;
        z-index:                     2;

        &.tile-merged .tile-inner {
          @include animation(pop 200ms ease-in);
        }

        @for $x from 1 through $tile-count {
          @for $y from 1 through $tile-count {
            $zeroOffsetX: $x - 1;
            $zeroOffsetY: $y - 1;
            $newX: ($tile-size) * ($zeroOffsetX) + ($tile-padding * $zeroOffsetX);
            $newY: ($tile-size) * ($zeroOffsetY) + ($tile-padding * $zeroOffsetY);

            &.position-#{$zeroOffsetX}-#{$zeroOffsetY} {
              @include transform(translate($newX, $newY));
            }
          }
        }

        @for $i from 1 through length($colors) {
          &.tile-#{power(2, $i)} .tile-inner {
            background: nth($colors, $i)
          }
        }
        &:last-child {
          margin-right: 0
        }

        .tile-inner {
          line-height: ($width/$tile-count) - $tile-padding;

          text-align:  center;
          font-weight: bold;
          z-index:     10;
          //          font-size:   2.5em;
        }

        img.actor {
          max-width: 100%;
        }
      }
    }
  }
}

@for $i from $min-tile-count through $max-tile-count {
  @include game-board($i);
}

@include keyframes(appear) {
  0% {
    opacity: 0;
    @include transform(scale(0));
  }
  50% {
    opacity: 1;
    @include transform(scale(1.2));
  }
  100% {
    opacity: 1;
    @include transform(scale(1));
  }
}

@include keyframes(pop) {
  0% {
    opacity: 1;
    @include transform(scale(1));
  }
  50% {
    // opacity: 0;
    @include transform(scale(1.2));
  }
  100% {
    opacity: 0;
    @include transform(scale(1));
  }
}

.no-lineheight {
  line-height: 0 !important;
}

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.glyphicon-refresh-animate {
  -animation:        spin .7s infinite linear;
  -webkit-animation: spin2 .7s infinite linear;
}

@-webkit-keyframes spin2 {
  from {
    -webkit-transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(360deg);
  }
}

@keyframes spin {
  from {
    transform: scale(1) rotate(0deg);
  }
  to {
    transform: scale(1) rotate(360deg);
  }
}

#test-result {
  position:      absolute;
  top:           0;
  z-index:       10;
  background:    #BBADA0;
  width:         100%;
  height:        100%;
  left:          -15px;
  padding:       10px;
  border:        2px solid #8F7A66;
  border-radius: 3px;
  font-size:     14px;
  opacity:       0.7;
}

.panel {
  margin-bottom: 15px;
}

.small-font {
  font-size: 10px;
  text-align: center;
  margin-top: 5px;
}